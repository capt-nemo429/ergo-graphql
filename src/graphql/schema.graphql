# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AdProof {
  digest: String!
  headerId: String!
  proofBytes: String!
}

type Asset {
  headerId: String!
  token: Token!
  tokenId: String!
  value: BigInt!
}

scalar BigInt

type Box {
  additionalRegisters: JSON!
  address: String!
  assets: [Asset!]!
  boxId: String!
  creationHeight: Int!
  ergoTree: String!
  globalIndex: Int!
  headerId: String!
  index: Int!
  mainChain: Boolean!
  settlementHeight: Int!
  spentBy: Input
  transaction: Transaction!
  transactionId: String!
  value: BigInt!
}

type DataInput {
  box: Box!
  boxId: String!
  headerId: String!
  index: Int!
  mainChain: Boolean!
  transaction: Transaction!
  transactionId: String!
}

type Extension {
  digest: String!
  fields: JSON!
  headerId: String!
}

type Header {
  adProof: AdProof!
  adProofsRoot: String!
  difficulty: Int!
  extension: Extension!
  extensionHash: String!
  headerId: String!
  height: Int!
  mainChain: Boolean!
  nBits: BigInt!
  parentId: String!
  powSolutions: JSON!
  stateRoot: String!
  timestamp: BigInt!
  transactionsRoot: String!
  version: Int!
  votes: [Int!]!
}

type Input {
  box: Box!
  boxId: String!
  extension: JSON!
  headerId: String!
  index: Int!
  mainChain: Boolean!
  proofBytes: String
  transaction: Transaction!
  transactionId: String!
}

scalar JSON

type Query {
  blockHeaders(skip: Int = 0, take: TakeAmount = 10): [Header!]!
  boxes(address: String, boxId: String, skip: Int = 0, take: TakeAmount = 100): [Box!]!
  dataInputs(skip: Int = 0, take: TakeAmount = 100): [DataInput!]!
  inputs(skip: Int = 0, take: TakeAmount = 100): [Input!]!
  tokens(skip: Int = 0, take: TakeAmount = 100): [Token!]!
  transactions(skip: Int = 0, take: TakeAmount = 100): [Transaction!]!
}

"""Pagination take amount type"""
scalar TakeAmount

type Token {
  box: Box!
  boxId: String!
  decimals: Int
  description: String
  emissionAmount: BigInt!
  name: String
  tokenId: String!
  type: String
}

type Transaction {
  coinbase: Boolean!
  dataInputs: [DataInput!]!
  globalIndex: Int!
  headerId: String!
  inclusionHeight: Int!
  index: Int!
  inputs: [Input!]!
  mainChain: Boolean!
  outputs: [Box!]!
  size: Int!
  timestamp: BigInt!
  transactionId: String!
}
